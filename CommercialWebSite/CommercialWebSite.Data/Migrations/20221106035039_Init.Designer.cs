// <auto-generated />
using System;
using CommercialWebSite.Data.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommercialWebSite.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221106035039_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Clothes",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854127/cat-1_veobee.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Household",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-2_thblkg.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Electronic",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-3_dvyjbe.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Beauty",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-4_ymnplq.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Book",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-5_ijcxzw.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Pet",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-6_s3afnw.jpg",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfGood")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 3
                        },
                        new
                        {
                            OrderId = 4,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 4
                        },
                        new
                        {
                            OrderId = 5,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 5
                        },
                        new
                        {
                            OrderId = 6,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 6
                        },
                        new
                        {
                            OrderId = 7,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 7
                        },
                        new
                        {
                            OrderId = 8,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 8
                        },
                        new
                        {
                            OrderId = 9,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberInStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 1",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-1_iyqgel.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 2",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-2_wds2xq.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 3",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-3_ysbo6f.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 4",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-4_w2yb1f.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 5",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-5_nhbfgf.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 6",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-6_rsti5j.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 7",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-7_ykpjce.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 8",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-8_wu5jzf.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 9",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-9_pik3wm.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 10",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-10_buoi29.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 11",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-11_zpxzs7.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 12",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-12_s0abhz.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            CreateDate = "11/06/2022 10:50 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 13",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-13_p3fpxz.jpg",
                            UpdateDate = "11/06/2022 10:50 AM"
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.Property<int>("ProductReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductReviewId"), 1L, 1);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductRating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductReviewId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "708c2c54-14ae-4bb7-b91b-395cf1fb11fa",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "admin",
                            LastName = "admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEA3JgOkXvgKMqJ0upjmKnBAwmkTvRsXr6IYzxYNo9dYWcp2WmREOgAjp/7UOADN2Aw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            SecurityStamp = "70000ee8-f31f-4a70-8932-30902f0ee6b4",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "b1d45aba-d5c9-44cc-956a-6540cf6ef53c",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "eb6b63c4-792b-4230-92ea-6965640b2f8e",
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "0",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0",
                            PasswordHash = "AQAAAAEAACcQAAAAEFIdkS+RZMfJyrgjDMn5wQR3HFdK+Y+5sYzwJLGa93cwpOpYtbmQ4h7RZaxJR7ynaQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "cafc3569-a5d8-4b94-b30e-1523d94228cd",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user0"
                        },
                        new
                        {
                            Id = "489af7e6-3f5e-44d7-ab93-a24f475e5c89",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "255615e8-4dbf-456b-af25-83e8cea2a8fe",
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEOJQ4/I0ilqTLJjw3kQKlPKzUWBxf1bDk9W8KJIR+7worEKjzapmHS96E1tix7Z23g==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "c053b099-e112-40e7-bb16-2519c091b15d",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "d1be8045-e153-48aa-86a3-c644c380236f",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "7b7c3906-b68a-4b2a-bb75-5c2656f94e0e",
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEP3Mx/Mp9bhBr4fT5fmwLw7pYg2b9wjGUxN351gjMOLLzZ5gY3jf5JkLIjXt73g7Iw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "b00505e1-aafc-4433-9912-396c7375ce54",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = "e2e871f7-c900-4204-834f-eb8ee4cc1493",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "7cb22e7f-41e9-4b52-8ddb-1c0b37c1c32e",
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEO44G2bNpcErCteHeT2P8wj1KClo4DF6lt9hxsGWZZGYafqqD4KescBMWYq6s+s/TA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "a5387f07-4120-4d06-9734-e5fff0cbc447",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user3"
                        },
                        new
                        {
                            Id = "03b276fd-7eb1-48f0-8aa3-e584609d354a",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "5b5e6966-6fa1-4c19-b87a-7204bc471d44",
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAENRW7IL0IL2aBC/cI5GlOCBD18zC2p8aO1kjSLTES3nUp2jPgEzjO82Un4N1WE81LQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "07b3d00b-50cd-44b5-a7a8-8c6be3c030af",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user4"
                        },
                        new
                        {
                            Id = "c8bbb3c1-7ad8-4a90-9a26-0008ce6e26a1",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "771a1fa9-bac4-4ff1-a59b-a52291361019",
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAECnWDfjVRh7oDWHb+rnagv6+XnHyZE3uk28pS0pB0gmZcHGg18AXg38MewwivSpE5w==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "ebc2cff1-5e54-48a7-a901-b155d882cc68",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user5"
                        },
                        new
                        {
                            Id = "84c1d15b-7560-4dab-8223-91d3d0edf345",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "a7264426-453d-4529-a754-7ae984767cba",
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEGg9oIZbVEhHMlZlw2O2mv3mSkFgPYhRB/8oQAfNZyVZ3Ur5yAOjE1e1v+VFR9QPXg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "3e92377c-de60-491f-bc6c-4aae406598fe",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user6"
                        },
                        new
                        {
                            Id = "135d1eee-3644-42b1-9c63-163d016bc2bd",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "9f311681-9057-4773-bb09-64c589ccb58b",
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEKA5Y8xJwQv3yz/vvknDoB6Af2wEGB/30vrWEAYytoTnj1oW89h7CiZpbnI6nOt7JQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "4cc3348e-b0b2-4631-9185-30231e396146",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user7"
                        },
                        new
                        {
                            Id = "8cacfc1f-bdfc-4850-9105-cf183ac4e012",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "faa62e0c-bd7e-4bd5-99ec-2148a242e854",
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAECUPnB5gIqzmtqnuU7yMwwpVAEsByqRQ13arriPvpc9QQ+ExvKDMIElo9BGq5e/Z1Q==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "ac8bbf4f-0ee8-4dba-bf29-4d2b10dcd7af",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user8"
                        },
                        new
                        {
                            Id = "f69f1fff-dfc7-4e85-8bfa-358e20ef4dd7",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "6d941996-7402-40e2-84a6-4aa01d6a4f54",
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEL2nj4+aEqA4+9FEvOWmIXG/I40aRHCqe9cop8npWURrosrp+e+YitKwsIaL1kiCEw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "e4af952b-68d8-4876-92a3-b57d9538de80",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user9"
                        },
                        new
                        {
                            Id = "c306005f-e6fc-45a5-b375-8588696426ab",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "5c41ff74-47e7-4a8f-a3ce-8d4ec701d5e5",
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@GMAIL.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAEEijUBw/Px+ZVy4VEcrR3rd05x01aTzhEAIIugJf2jXWDfVCfWnhSztnNZBflXrR2w==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "bd9e725c-5725-43b8-9384-19cfa14d6103",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "User",
                            NormalizedName = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId");

                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "UserAccount")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserAccountId");

                    b.Navigation("Product");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
