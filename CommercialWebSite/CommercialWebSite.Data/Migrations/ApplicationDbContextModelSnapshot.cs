// <auto-generated />
using System;
using CommercialWebSite.Data.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommercialWebSite.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Clothes",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854127/cat-1_veobee.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Household",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-2_thblkg.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Electronic",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-3_dvyjbe.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Beauty",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-4_ymnplq.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Book",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-5_ijcxzw.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Pet",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-6_s3afnw.jpg",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfGood")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberInStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 1",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-1_iyqgel.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 2",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-2_wds2xq.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 3",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-3_ysbo6f.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 4",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-4_w2yb1f.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 5",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-5_nhbfgf.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 6",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-6_rsti5j.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 7",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-7_ykpjce.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 8",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-8_wu5jzf.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 9",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-9_pik3wm.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 10",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-10_buoi29.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 11",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-11_zpxzs7.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 12",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-12_s0abhz.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            CreateDate = "11/03/2022 2:37 PM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 13",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-13_p3fpxz.jpg",
                            UpdateDate = "11/03/2022 2:37 PM"
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.Property<int>("ProductReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductReviewId"), 1L, 1);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductRating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductReviewId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "70ddfe00-fcad-4da1-b583-1ebbabe700da",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "admin",
                            LastName = "admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBr7NAZkhXvZkEycFYo99f1vaOqKXPb8AjXE0431Owa3AgJ1P5pwZK0Hni6toiOUmA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            SecurityStamp = "9dd4f4c0-48e6-4d79-9876-cf808ef1f07e",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "fa117a0a-f59e-4cfa-bcf0-d0afa0666305",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "137df2d5-e75b-48ca-9b37-e59a9654ecc4",
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "0",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0",
                            PasswordHash = "AQAAAAEAACcQAAAAENEESAKnY716p6WyRi3Ih2tE4gO+rWE0r0m78XdXcK/koLt4gZ4+BTEI4kh/DphKNQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "fd146375-6885-4836-94ba-94e433a73de6",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user0"
                        },
                        new
                        {
                            Id = "ab3f7c99-2883-46f5-964e-8ca5574c3aa0",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "24ee27a1-7ebf-4037-baf0-dbe2c2294e79",
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEFMNEtzTmLgELAIIpd/Jn171kOVvrZpw/Nwk0SqxoRKU+XhtL8LH3bbhk3vYD0yQFw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "c2b59fd6-6a8d-48a5-a22f-958f84768668",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "bd3d2a0d-8fce-4439-9ec0-bf6a02cf2a6c",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "75451194-f982-4899-9c0b-eeee310eb9b7",
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEDjJzNl+sUpz34hSFaecRngObhiBOKVL/wbVMXtGBEG0yaDi9M1wWzo/UH/GyLKXHg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "4bb6539f-1d5a-424b-b47d-8b422881b97b",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = "0acd99f5-148d-4d37-a49c-1f135cd99321",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "34644644-d60f-4805-898b-f7f3901dc5e1",
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEKhcipwuBBEEGPiRL/l438qZwQrgavOwABUwG7LPuz3m1UZhWtILU8q9+A6Ms4Dwcw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "de51516c-197e-42ee-aaf4-1eb5b2ffcbd3",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user3"
                        },
                        new
                        {
                            Id = "49d53d1b-79ea-4936-87b7-eace50a768a1",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "61094a5b-1020-4fe6-9141-e9ea8ccfa733",
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEMAIVc951GUbE0J86WRFGH+aMRjKmXReD0L2DRDGQAIrFaQRAfV0WVVF9kvq1dyyBQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "5bedc972-4f77-42b0-8a25-5f2e88d9bd58",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user4"
                        },
                        new
                        {
                            Id = "7f443cd1-b3e4-424c-812e-696b7651ff1b",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "e211df18-9256-45c7-8b25-43f8812d7ca2",
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAEIwbXsJPJFio6fFL3O9Fhg8H7C0KAJUIoqSWUkcv8B+C2FCzYIHOFbuzQzMt1QFEMw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "f89988ab-bd71-4e50-9287-ba4dc9481822",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user5"
                        },
                        new
                        {
                            Id = "1fd7217b-f8bf-48ed-bf18-0a9cd8034b12",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "49ddbd4b-5e7c-48e3-947d-668ccbb670b5",
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEIYOdWTaE/LfzwA2Qr6BEAOV8UZKFrssbZ4xCjFB85nd+53Nqjr2emTBmOiEhU30Iw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "72449ed8-b908-4bbe-a2e9-f2e94fea095e",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user6"
                        },
                        new
                        {
                            Id = "d5df8f67-ef4f-46f6-88e8-94a8319f824a",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "01ed369b-4c1d-4092-a5ff-403744d37a15",
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEEZBp2wNuFk0gmcHqtXUNIqkH1zjoAQu0RAVk95UuFCcT4m3KLiSJkDMj+kvWYBgqQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "bde1ba72-d2d6-44eb-9c0d-54858e8063b1",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user7"
                        },
                        new
                        {
                            Id = "c17e85c8-a016-4ace-8054-35642316d381",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "2061adeb-4ce2-41b0-8f86-5c756799bd0f",
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEOM+PuSkWSqyKRzPdxWajmvBXnA7HfJ8wYG/S1d6al1W+e7nAzAMnKB98QnUcSOVtg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "64b316a0-d6a5-457a-8372-31e3230361d6",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user8"
                        },
                        new
                        {
                            Id = "9d76374d-4409-4059-93d8-1954860b5f5e",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "3df10403-d241-4071-b377-8fd3b068776a",
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEI1Mkw0io/znFUtNRiHw8gh2L13X2DTlPGdr2A6GX1RjLGKjCSY3cFn8GRO4w2ztsg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "cb202472-5124-4de5-8c7c-a5da2e6bb96b",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user9"
                        },
                        new
                        {
                            Id = "3e7c047b-88f3-403b-9d8e-086705edea4c",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "c0a177cd-e15d-4dc1-9911-9e2c5c83fae2",
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@GMAIL.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAEPspey8pWAxz6Dtxs9ID3heQI8PgzsI9I2v5x51hN/hcL1E9mcBd0avbLjNA9M/WGg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "64afbb2d-49ec-46e5-84cf-8671fdc6d54e",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "User",
                            NormalizedName = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId");

                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "UserAccount")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserAccountId");

                    b.Navigation("Product");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
