// <auto-generated />
using System;
using CommercialWebSite.Data.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommercialWebSite.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221108021426_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Clothes",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854127/cat-1_veobee.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Household",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-2_thblkg.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Electronic",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-3_dvyjbe.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Beauty",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854128/cat-4_ymnplq.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Book",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-5_ijcxzw.jpg",
                            IsActive = true
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Pet",
                            CategoryPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/w_150,h_150/v1666854128/cat-6_s3afnw.jpg",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("BuyerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfGood")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 3
                        },
                        new
                        {
                            OrderId = 4,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 4
                        },
                        new
                        {
                            OrderId = 5,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 5
                        },
                        new
                        {
                            OrderId = 6,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 6
                        },
                        new
                        {
                            OrderId = 7,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 7
                        },
                        new
                        {
                            OrderId = 8,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = true,
                            NumOfGood = 2,
                            ProductId = 8
                        },
                        new
                        {
                            OrderId = 9,
                            BuyerId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            IsActive = true,
                            IsCheckedOut = false,
                            NumOfGood = 2,
                            ProductId = 9
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberInStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 4,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 1",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-1_iyqgel.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2000.0,
                            ProductName = "Product 2",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-2_wds2xq.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 3",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-3_ysbo6f.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 4",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-4_w2yb1f.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 5",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-5_nhbfgf.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 6",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-6_rsti5j.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 10000.0,
                            ProductName = "Product 7",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-7_ykpjce.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 3,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 8",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-8_wu5jzf.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 9",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854129/product-9_pik3wm.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 10",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-10_buoi29.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 2300.0,
                            ProductName = "Product 11",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-11_zpxzs7.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 12",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-12_s0abhz.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            CreateDate = "11/08/2022 9:14 AM",
                            Description = "Open your door to the world of grilling with the sleek Spirit II E-210 gas grill. This two burner grill is built to fit small spaces, and packed with features such as the powerful GS4 grilling system, iGrill capability, and convenient side tables for placing serving trays. Welcome to the Weber family.",
                            IsActive = true,
                            Price = 30000.0,
                            ProductName = "Product 13",
                            ProductPicture = "https://res.cloudinary.com/dddvmxs3h/image/upload/v1666854130/product-13_p3fpxz.jpg",
                            UpdateDate = "11/08/2022 9:14 AM"
                        });
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.Property<int>("ProductReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductReviewId"), 1L, 1);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductRating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductReviewId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "54ec052c-696b-483a-840d-b9a6213ee3ef",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "admin",
                            LastName = "admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEL4SXfZ//5fE1R3iuCwQ/U5Ou5SPKm5u35QAsbm1YrWdAitsv9lN+1kbdLhhRks9fA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            SecurityStamp = "963be52d-f948-493e-a917-836867a18a2c",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "a5d5f27e-61fa-40b0-97d2-a41763bcc919",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "78b17d06-4fce-4c89-87cc-f707d079fc18",
                            Email = "user0@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "0",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER0@GMAIL.COM",
                            NormalizedUserName = "USER0",
                            PasswordHash = "AQAAAAEAACcQAAAAEFNtfz/ljmoQ+dw8xFSpo7fkt71fuyJh3rxvsIWnO6DLe/eE1nYb3lHzHesEmAzZ9A==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "73dbff83-8355-4669-9d62-cc97287adf3b",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user0"
                        },
                        new
                        {
                            Id = "e75f0b6e-e98e-4ddf-8f68-963a2ecd4228",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "2ef61ed1-abd7-44ce-bcc3-37b23dc6e192",
                            Email = "user1@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@GMAIL.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEC2uKrP5WtSc/qZvImWDYy4e0o5sqz1PTwGnYlc/otIisgiUKSDGv3Fd43wrHGgZmA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "ae80bee4-2794-45dd-959f-a3e60f11afb8",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "2892fb6e-c23c-4694-8344-55779c5ad511",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "203d3f69-bbe4-4e13-9ae6-c88fc449a780",
                            Email = "user2@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@GMAIL.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEPraO0m+QYsZlIBFAKPmdsnwP5dpGJ4kf9ZNBXI1uA+mL8e9n2ZqGYHvugOQwkI3ZQ==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "8e0bd027-5c23-42cb-8c11-aeba3951cf69",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = "2374a79e-73d2-4977-a94e-5c6cd87a7891",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "01433992-51d5-48b2-82ef-705a84d1a0c5",
                            Email = "user3@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@GMAIL.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHBlMcXnPF0pZX1w7EG0khtOYEVeXMmb3dKfL8SSt7RkYpJqhS97ZCgY+0IuJbvHLg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "4108e5d8-ff5e-4a50-b6c3-4aa477e2d8f1",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user3"
                        },
                        new
                        {
                            Id = "fecc1961-76ca-405b-957f-1a84de8351c0",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "93a7409c-658b-460b-8086-81c044154d5a",
                            Email = "user4@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@GMAIL.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEH5nUCFbDnxV6ggxAuljRozSUyal90HyJ0BPXnYeK6bDz8s2tPjbnvVVRK4goffwxg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "3ddefacf-6622-4307-8938-e9096437ac20",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user4"
                        },
                        new
                        {
                            Id = "06277a56-f91a-4bf0-a690-73dd77bc9abc",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "165e95d3-d0e7-405c-b3d8-52603cbd84b7",
                            Email = "user5@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@GMAIL.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAED0GD+K701umjwR3omRIOUO9vXciVrCgJaUcEW4pSdEkYFcu+sLoHZCCqQWcdfy16A==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "6cabb96c-acc1-492d-bfab-02b94099d691",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user5"
                        },
                        new
                        {
                            Id = "3940fab0-aaa9-4913-ae21-9c2915ab77d5",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "4b5e0f81-be35-4cb6-bedf-8bde34a3fb07",
                            Email = "user6@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@GMAIL.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEGNAJFxIHmIwlB1RfOgmhvM4WqWhlQEW422blWloKYNR6nKVtLEoPFnchoJtdfYDpg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "a928c4e9-be10-4af1-b0b2-2b86cf19e58c",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user6"
                        },
                        new
                        {
                            Id = "7a33a9f6-98ca-4dc2-bbce-da4474c5ec32",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "4d29aeea-5070-411e-8f18-4cf877cbea7f",
                            Email = "user7@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@GMAIL.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEPDjwVJB31ItPR6g2tevFgXsy7KSNxdlDxyx/HJvapLS9KQRIRyFVqYAkJVvggTHjw==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "b1633951-0188-4058-ba15-47eeae753cc3",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user7"
                        },
                        new
                        {
                            Id = "4d41151b-3c7c-4101-81fb-99d00ab884c0",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "cf757900-6362-4cdf-af0e-b0c1812fb2bb",
                            Email = "user8@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@GMAIL.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEGDzd6ANiEMHVx9oohKfQ9xmuqM2YV32dKPEi2TmoJHELCOs8/FHWE5qvn4bu4SZtA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "80e46ed2-ed9d-4112-8909-842d438e8515",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user8"
                        },
                        new
                        {
                            Id = "bccb83e5-bfda-43eb-bd4a-28b9ae25c209",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "248d6f6c-8b1b-4760-8ea2-5b1e6d86c7de",
                            Email = "user9@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@GMAIL.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEDnYKy4XBjh1KHiB8RhyDvO8Zje3vO2sIefl6JpLTKIeET3TXoHGz8q04Z/IOMExUg==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "c8118e89-a687-4ae7-bbbb-808463e35d3f",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user9"
                        },
                        new
                        {
                            Id = "83ca93da-b52c-4c8c-84d8-a03ef72eb0c0",
                            AccessFailedCount = 0,
                            Birthday = new DateTime(2022, 11, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ConcurrencyStamp = "ac63bac0-cbec-4d81-95eb-82ac4fb2de5e",
                            Email = "user10@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "user",
                            LastName = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@GMAIL.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ9NmFY2JOcAwC3B+7VZ9Sf6AuJm9e/x6x+c//43EWPCU7LzdO6qbUhwCNR7VI0nkA==",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            RoleId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            SecurityStamp = "72b334a2-cb9a-4e14-b964-970fe249aa29",
                            TwoFactorEnabled = false,
                            UserAddress = "sdfasdfsadf",
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "User",
                            NormalizedName = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Order", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId");

                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.ProductReview", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", "UserAccount")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserAccountId");

                    b.Navigation("Product");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CommercialWebSite.Data.DataModel.UserAccount", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("CommercialWebSite.Data.DataModel.UserAccount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
